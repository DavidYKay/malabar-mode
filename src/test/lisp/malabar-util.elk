;;; -*- emacs-lisp -*-
;; Copyright (c) 2009 Espen Wiborg <espenhw@grumblesmurf.org>
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, write to the Free Software
;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
;; 02110-1301 USA.
;;
(when load-file-name
  (add-to-list 'load-path (file-name-directory load-file-name))
  (add-to-list 'load-path (replace-regexp-in-string "test" "main"
                                                    (file-name-directory load-file-name)
                                                    t t)))

(require 'elk-test)
(require 'malabar-util)

(setq elk-test-run-on-define nil)

(deftest "start-with empty"
  (assert-nil (string-starts-with "" "foo")))

(deftest "start-with match"
  (assert-t (string-starts-with "foobar" "foo")))

(deftest "start-with no match"
  (assert-nil (string-starts-with "barfoo" "foo")))

(deftest "end-with empty"
  (assert-nil (string-ends-with "" "foo")))

(deftest "end-with match"
  (assert-t (string-ends-with "foobar" "bar")))

(deftest "end-with no match"
  (assert-nil (string-ends-with "barfoo" "bar")))

(deftest "trim empty"
  (assert-equal "" (string-trim "")))

(deftest "trim all-spaces"
  (assert-equal "" (string-trim "             ")))

(deftest "trim funky-whitespace"
  (assert-equal "" (string-trim "     \t\t \n       ")))

(deftest "trim start"
  (assert-equal "foo" (string-trim "     \t\t \n       foo")))

(deftest "trim end"
  (assert-equal "foo" (string-trim "foo     \t\t \n       ")))

(deftest "trim both"
  (assert-equal "foo" (string-trim "     \t\t \n       foo     \t\t \n       ")))

(deftest "delete-whitespace empty"
  (assert-equal "" (string-delete-whitespace "")))

(deftest "delete-whitespace"
  (assert-equal "abcdf" (string-delete-whitespace " \na b c \n\n\t d f")))

(apply #'elk-test-group "all-tests" (mapcar #'car elk-test-alist))

(let ((result (elk-test-run "all-tests")))
  (mapc #'message result)
  (when (and result noninteractive)
    (kill-emacs 1)))
